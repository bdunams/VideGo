
@{
    ViewBag.Title = "ReturnRental";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Return Rental</h2>

<form id="new-return">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
        </div>
    </div>


    <div class="row">
        <div class="col-md-4 col-sm-6">
            <div id="rental-results"></div>

            <ul id="current-rentals" class="list-group"></ul>

            <ul id="previous-rentals" class="list-group"></ul>

        </div>
    </div>
    <br />
    <button class="btn btn-success">Return Movies</button>
</form>




@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            let vm = {
                rentalIds: []
            };

            function renderRentalData(rentalData) {
                $("#current-rentals").prepend("<h3>Current Rentals</h3>");

                rentalData.forEach(function (rental) {
                    if (rental.dateReturned === null) {
                        var rentalListItem = $("<li>").addClass("list-group-item col-md-12");

                        rentalListItem.append(`<div class="col-md-8">
                            <h4>${rental.movie.title}</h4>
                            <p>${rental.dateRented}</p></div>`)

                        rentalListItem.append(`<br/><button class="btn btn-primary return-button" data-rentalId="${rental.id}" col-md-4">Add Return</button>`);

                        $("#current-rentals").append(rentalListItem); 
                    }
                })
            }

            $("#current-rentals").on("click", ".return-button", function (e) {
                e.preventDefault();

                $(this).addClass("btn-success").removeClass("btn-primary");

                let rentalId = $(this).attr("data-rentalId");

                vm.rentalIds.push(rentalId);
            })

            

            let customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 2,
                highlight:true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
                }).on("typeahead:select", function(e, customer) {
                    vm.customerId = customer.id

                    $.ajax({
                        url: "/api/rental/" + customer.id,
                        method: "get",
                    })
                    .done(function (rentalData) {
 
                        vm.customerId = null;
                        $("#rental-results").empty();
                        $("#current-rentals").empty();
                        $("#previous-rentals").empty();

                        if (rentalData == false)
                            $("#rental-results").append("<h3>This customer has no current rentals</h3>")
                        else
                            renderRentalData(rentalData);

                    })
                    .fail(function () {
                        toastr.error("Customer doesn't exist!")
                    })
                });


            $.validator.addMethod("validCustomer", function () {
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a valid customer");

            $.validator.addMethod("atLeastOneRental", function () {
                return vm.rentalIds.length > 0;
            }, "No rentals added to return");


            let validator = $("#new-return").validate({
                submitHandler: function() {
                    $.ajax({
                        url: "/api/Rental",
                        method: "update",
                        data: vm
                    })
                    .done(function () {
                        toastr.success("Rentals successfully returned!")

                        $("#customer").typeahead("val", "");

                        vm = { rentalIds: [] };

                        validator.resetForm();
                    })
                    .fail(function () {
                        toastr.error("Something unexpected happened.")
                    })

                    return false;
                }
            });

        });
    </script>

}




